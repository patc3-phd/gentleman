% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logger.R
\name{get_logger}
\alias{get_logger}
\title{Create a logger}
\usage{
get_logger(
  dir = getwd(),
  fname = NULL,
  add_git_info = TRUE,
  git_dir = NULL,
  init_log_file = TRUE
)
}
\arguments{
\item{dir}{path to directory where to log output (default is current directory)}

\item{fname}{log file name (default is current system date and time)}

\item{add_git_info}{(logical) whether to add current git commit info
to logger and file name (default \code{TRUE})}

\item{git_dir}{path to git repository (if different from \code{dir})}

\item{init_log_file}{(logical) whether to log an initial message
(by printing the logger to the text file; default is \code{TRUE})}
}
\value{
logger object (list) with elements:
\describe{
\item{fname}{log file name}
\item{dir}{log directory}
\item{gitcommit}{(optional) list with elements \code{HEAD}, \code{SHA}, and \code{COMMIT_MSG};
see \code{\link[=get_git_commit]{get_git_commit()}}}

}
}
\description{
This function creates a logger object that can be used with \code{\link[=logtext]{logtext()}} to
write console output to a log file on disk.
}
\examples{
\dontrun{
logger <- get_logger()
logger |> logtext(expr=print("hello world!"))
}

}
\seealso{
\code{\link[=logtext]{logtext()}}, \code{\link[=get_git_commit]{get_git_commit()}}
}
