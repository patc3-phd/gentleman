% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataprep.R
\name{recode_using_excel_map}
\alias{recode_using_excel_map}
\title{Recode values using Excel map (lookup table)}
\usage{
recode_using_excel_map(
  values,
  path,
  sheet = 1,
  col_find = 1,
  col_replace = 2,
  first_row_is_header = TRUE,
  keep_original_when_no_match = FALSE,
  ...
)
}
\arguments{
\item{values}{values to be recoded}

\item{path}{(character) path to the excel file}

\item{sheet}{(numeric or character) sheet number or name where the map is}

\item{col_find}{(numeric or character) column number or name
where original values are}

\item{col_replace}{(numeric or character) column number or name
where replacement values are}

\item{first_row_is_header}{(logical) whether the first row
is column names (default \code{TRUE})}

\item{keep_original_when_no_match}{(logical) whether to retain original
value when no match is found (otherwise will be \code{NA}; default \code{FALSE})}

\item{...}{additional named arguments passed to \code{\link[readxl:read_excel]{readxl::read_excel()}}
(like \code{range} or \code{na})}
}
\value{
\code{values} recoded
}
\description{
This function recodes values using a map (lookup table) located in an Excel sheet.
}
\details{
The map should have at least two columns, one with original (find) values,
one with replacement values. By default the function uses the first
sheet in the Excel file specified in \code{path}; it uses the first
column as the find column, and the second column as the replacement column;
and it assumes the first row is a header (column names).
Additional named arguments can be passed to \code{\link[readxl:read_excel]{readxl::read_excel()}} via \code{...}
for more complicated maps (e.g. custom cell range).

If there is at least one value that does not have a match
and \code{keep_original_when_no_match} has been requested,
a warning will be thrown with the list of values that could not be matched.
}
\examples{
\dontrun{
df$Nationality <- df$Nationality |>
   recode_using_excel_map("map.xlsx", sheet="Nationality")
}
}
